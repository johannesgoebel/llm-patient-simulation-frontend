{"version":3,"sources":["pages/static/astrid_seeger.png","pages/static/michael_schulze.png","pages/static/lieselotte_daenger.png","pages/static/SoundIcon.js","pages/static/MicIcon.js","pages/helperFunctions/Dictaphone.js","pages/helperFunctions/Sidepanel.js","pages/ChatWindow.js","pages/helperFunctions/AudioStream.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SoundIcon","React","createElement","xmlns","viewBox","width","height","id","d","stroke","stroke-width","stroke-linecap","begin","attributeName","dur","values","repeatCount","MicIcon","fill","className","Dictaphone","_ref","sendMessage","dictaphoneState","transcript","browserSupportsSpeechRecognition","useSpeechRecognition","style","borderRadius","margin","onMouseDown","SpeechRecognition","startListening","onMouseUp","handleMouseUp","delay","Promise","res","setTimeout","stopListening","renderIcon","role","Sidepanel","vignetteName","apiKey","handleApiKeyChange","display","flexDirection","paddingTop","boxSizing","overflow","fontSize","textOverflow","flex","justifyContent","alignItems","src","img_michael","alt","img_astrid","img_lieselotte","renderImage","flexShrink","htmlFor","tabIndex","data-toggle","title","type","placeholder","value","onChange","vignetteMap","checkAndSetSessionID","sessionID","localStorage","getItem","console","log","crypto","randomUUID","setItem","ChatWindow","vignette","messages","setMessages","useState","input","setInput","setApiKey","setDictaphoneState","voiceGenState","setVoiceGenState","loading","setLoading","error","setError","dotenv","require","sessionId","config","process","chatContainerRef","useRef","voiceSettings","stability","similarity_boost","use_speaker_boost","useEffect","fetchMessages","current","scrollTop","scrollHeight","async","response","fetch","concat","encodeURIComponent","ok","Error","data","json","apiMessages","map","_ref2","sender","text","user","message","url","method","headers","answer","voiceId","onLoading","onError","requestBody","voice_settings","model_id","voicesResponse","axios","get","status","germanVoices","voices","filter","voice","fine_tuning","language","post","responseType","Audio","URL","createObjectURL","play","startStreaming","maxHeight","data-bs-theme","minHeight","background","color","e","target","onInput","handleInputChange","checked","onClick","backgroundColor","padding","position","length","msg","index","renderMessage","isUser","key","maxWidth","left","transform","disabled","onKeyDown","fillRule","App","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,gD,oLCsB5BC,MApBGA,IAChBC,IAAAC,cAAA,OAAKC,MAAM,6BAA6BC,QAAQ,cAAcC,MAAM,KAAKC,OAAO,MAChFL,IAAAC,cAAA,QAAMK,GAAG,QAAQC,EAAE,gBAAgBC,OAAO,QAAQC,eAAa,IAAIC,iBAAe,QAAQC,MAAM,MAC9FX,IAAAC,cAAA,WAASW,cAAc,IAAIC,IAAI,KAAKC,OAAO,+CAA+CC,YAAY,aAAaJ,MAAM,UAE3HX,IAAAC,cAAA,QAAMK,GAAG,QAAQC,EAAE,gBAAgBC,OAAO,QAAQC,eAAa,IAAIC,iBAAe,SAChFV,IAAAC,cAAA,WAASW,cAAc,IAAIC,IAAI,KAAKC,OAAO,+CAA+CC,YAAY,aAAaJ,MAAM,UAE3HX,IAAAC,cAAA,QAAMK,GAAG,QAAQC,EAAE,gBAAgBC,OAAO,QAAQC,eAAa,IAAIC,iBAAe,SAChFV,IAAAC,cAAA,WAASW,cAAc,IAAIC,IAAI,KAAKC,OAAO,+CAA+CC,YAAY,aAAaJ,MAAM,UAE3HX,IAAAC,cAAA,QAAMK,GAAG,QAAQC,EAAE,gBAAgBC,OAAO,QAAQC,eAAa,IAAIC,iBAAe,SAChFV,IAAAC,cAAA,WAASW,cAAc,IAAIC,IAAI,KAAKC,OAAO,+CAA+CC,YAAY,aAAaJ,MAAM,UAE3HX,IAAAC,cAAA,QAAMK,GAAG,QAAQC,EAAE,gBAAgBC,OAAO,QAAQC,eAAa,IAAIC,iBAAe,SAChFV,IAAAC,cAAA,WAASW,cAAc,IAAIC,IAAI,KAAKC,OAAO,+CAA+CC,YAAY,aAAaJ,MAAM,WCP9GK,MARCA,IACZhB,IAAAC,cAAA,OAAKC,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKY,KAAK,eAAeC,UAAU,YAAYf,QAAQ,aAC7GH,IAAAC,cAAA,QAAMM,EAAE,mKACRP,IAAAC,cAAA,QAAMM,EAAE,4FCqDDY,MArDIC,IAAuC,IAAtC,YAAEC,EAAW,gBAAEC,GAAiBF,EAClD,MAAM,WACJG,EAAU,iCACVC,GACEC,iCAEJ,IAAKD,EACH,OAAOxB,IAAAC,cAAA,YAAM,sJA6Bf,OACED,IAAAC,cAAA,OAAKiB,UAAU,yEACflB,IAAAC,cAAA,OAAKiB,UAAU,6BACXlB,IAAAC,cAAA,UACIiB,UAAU,iDACVQ,MAAO,CAAEC,aAAc,MAAOvB,MAAO,QAASC,OAAQ,QAASuB,OAAQ,QACvEC,YAAaC,IAAkBC,eAC/BC,UAbYC,KApBtB,IAAiBC,IAqBP,IApBD,IAAIC,QAASC,GAAOC,WAAWD,EAAKF,IAqB3CJ,IAAkBQ,gBAClBjB,EAAYE,KApBKgB,MACjB,OAAQjB,GACN,KAAK,EACH,OACEtB,IAAAC,cAACe,EAAO,MAEZ,KAAK,EACH,OAAOhB,IAAAC,cAAA,OAAKiB,UAAU,4BAA4BsB,KAAK,WAEzD,KAAK,EACH,OACExC,IAAAC,cAACF,EAAS,MAEd,QACE,OAAO,OAkBFwC,IAELvC,IAAAC,cAAA,KAAGiB,UAAU,eAAeQ,MAAO,CAAEE,OAAQ,eAAgB,qD,+DCDtDa,MA9CGrB,IAAmD,IAAlD,aAAEsB,EAAY,OAAEC,EAAM,mBAAEC,GAAoBxB,EAc3D,OACIpB,IAAAC,cAAA,OAAKyB,MAAO,CAAEmB,QAAS,OAAQC,cAAe,SAAUzC,OAAQ,OAAQ0C,WAAY,OAAQC,UAAW,aAAcC,SAAU,WAC/HjD,IAAAC,cAAA,MAAIyB,MAAO,CAAEE,OAAQ,SAAUsB,SAAU,SAAUD,SAAU,SAAUE,aAAc,aAAeT,GAAkB,IACtH1C,IAAAC,cAAA,OAAKyB,MAAO,CAAE0B,KAAM,IAAKP,QAAS,OAAQQ,eAAgB,SAAUC,WAAY,SAAUL,SAAU,WAhBnFP,KACjB,OAAQA,GACJ,IAAK,kBACD,OAAO1C,IAAAC,cAAA,OAAKsD,IAAKC,IAAatC,UAAU,oBAAoBuC,IAAI,oBACpE,IAAK,gBACD,OAAOzD,IAAAC,cAAA,OAAKsD,IAAKG,IAAYxC,UAAU,oBAAoBuC,IAAI,kBACnE,IAAK,uBACD,OAAOzD,IAAAC,cAAA,OAAKsD,IAAKI,IAAgBzC,UAAU,oBAAoBuC,IAAI,yBACvE,QACI,OAAOzD,IAAAC,cAAA,cAQV2D,CAAYlB,IAEjB1C,IAAAC,cAAA,OAAKiB,UAAU,WAAWQ,MAAO,CAAEmC,WAAY,IAC3C7D,IAAAC,cAAA,OAAKiB,UAAU,QACXlB,IAAAC,cAAA,SAAO6D,QAAQ,cAAc5C,UAAU,aAAaQ,MAAO,CAAEmB,QAAS,OAAQS,WAAY,WACtFtD,IAAAC,cAAA,MAAIyB,MAAO,CAAEE,OAAQ,aAAcsB,SAAU,WAAY,WAAY,IACrElD,IAAAC,cAAA,QAAMiB,UAAU,iBAAiB6C,SAAS,IAAIC,cAAY,UAAUC,MAAM,6DACtEjE,IAAAC,cAAA,OAAKC,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKY,KAAK,eAAeC,UAAU,oBAAoBf,QAAQ,aACrHH,IAAAC,cAAA,QAAMM,EAAE,wEACRP,IAAAC,cAAA,QAAMM,EAAE,2OAIpBP,IAAAC,cAAA,SACIiE,KAAK,OACLhD,UAAU,eACVZ,GAAG,cACH6D,YAAY,uBACZC,MAAOzB,EACP0B,SAAUzB,EACVlB,MAAO,CAAEtB,MAAO,cCpCpC,MAAMkE,EAAc,CAClB,gBAAiB,gBACjB,kBAAmB,kBACnB,qBAAsB,wBAKxB,SAASC,IAIP,IAAIC,EAAYC,aAAaC,QAHR,aAerB,OAXAC,QAAQC,IAAIJ,GAEPA,IAEDA,EAXGK,OAAOC,aAcVL,aAAaM,QAXI,YAWkBP,IAIhCA,EA8QMQ,MA1QI5D,IAAmB,IAAlB,SAAE6D,GAAU7D,EAE9B,MAAMsB,EAAe4B,EAAYW,IAAa,oBACvCC,EAAUC,GAAeC,mBAAS,KAClCC,EAAOC,GAAYF,mBAAS,KAE5BzC,EAAQ4C,GAAaH,mBAAS,KAC9B9D,EAAiBkE,GAAsBJ,mBAAS,IAChDK,EAAeC,GAAoBN,oBAAS,IAC5CO,EAASC,GAAcR,oBAAS,IAChCS,EAAOC,GAAYV,mBAAS,IAC7BW,EAASC,EAAQ,IACjBC,EAAY1B,IAElBwB,EAAOG,SAEPvB,QAAQC,IADmBuB,oCAM3B,MAAMC,EAAmBC,iBAAO,MAI1BC,EAAgB,CACtBC,UAAW,GACXC,iBAAkB,IAClB9E,MAAO,EACP+E,mBAAmB,GAGnBC,oBAAU,KACR,MAAMT,EAAY1B,IAClBI,QAAQC,IAAI,cAAeqB,GAC3BU,EAAcV,IACf,CAACA,IAEFS,oBAAU,KACJN,EAAiBQ,UACnBR,EAAiBQ,QAAQC,UAAYT,EAAiBQ,QAAQE,eAE/D,CAAC5B,IAEJ,MAMMyB,EAAgBI,UACpB,GAAKd,GAAcvD,EAEnB,IACE,MAAMsE,QAAiBC,MAAM,2FAADC,OAA4FC,mBAAmBlB,GAAU,oBAAAiB,OAAmBC,mBAAmBzE,KAC3L,IAAKsE,EAASI,GACZ,MAAM,IAAIC,MAAM,2BAElB,MAAMC,QAAaN,EAASO,OAC5B5C,QAAQC,IAAI0C,GACZ,MAAME,EAAcF,EAAKN,SAASS,IAAIC,IAAA,IAAEC,EAAQC,GAAKF,EAAA,MAAM,CACzDG,KAAiB,SAAXF,EAAoB,KAAOA,EACjCC,KAAMA,KAIVzC,EAAY,IAAID,KAAasC,IAE3B,MAAO3B,GACPlB,QAAQkB,MAAM,0BAA2BA,GACzCC,EAAS,2BACV,QACCF,GAAW,KA0BTvE,EAAc0F,UAClB,GAAKe,GAAYnF,EAAjB,CACA6C,EAAmB,GACnBF,EAAS,IACT,IACE,MAAMyC,EAAG,6EAAAb,OAAgFC,mBAAmBW,GAAQ,aAAAZ,OAAYvE,EAAM,gBAAAuE,OAAeC,mBAAmBlB,GAAU,oBAAAiB,OAAmBC,mBAAmBzE,IAClNsE,QAAiBC,MAAMc,EAAK,CAChCC,OAAQ,OACRC,QAAS,CACP,OAAU,sBAId,IAAKjB,EAASI,GACZ,MAAM,IAAIC,MAAM,6BAElB,MAAMC,QAAaN,EAASO,OAI5B,GAHApC,EAAY,IAAID,EAAU,CAAE2C,KAAM,KAAMD,KAAME,GAAW,CAAED,KAAM,MAAOD,KAAMN,EAAKY,UACnF5C,EAAS,IACTE,EAAmB,GACfC,EAAe,CAEG,oBAAjB/C,GAjGc,uBAoGG,kBAAjBA,GArGa,uBCvDMqE,WAAyE,IAAlE,QAAEoB,EAAO,KAAEP,EAAI,OAAEjF,EAAM,cAAE2D,EAAa,UAAE8B,EAAS,QAAEC,GAASjH,EAEzF,MACM6G,EAAU,CACd,eAAgB,mBAChB,aAActF,GAGhBgC,QAAQC,IAAIqD,GAEZ,MAAMK,EAAc,CAClBV,OACAW,eAAgBjC,EAChBkC,SAAU,0BAGZ,IAEJ,MAAMC,QAAuBC,IAAMC,IAAI,sCAAuC,CAAEV,YAChF,GAA8B,MAA1BQ,EAAeG,OAAgB,CACjC,MAAMC,EAAeJ,EAAenB,KAAKwB,OAAOC,OAAOC,GACrDA,EAAMC,aAA8C,OAA/BD,EAAMC,YAAYC,UAEzCvE,QAAQC,IAAI,iBAAkBiE,QAE9BlE,QAAQC,IAAI,kCAKR,MAAMoC,QAAiB0B,IAAMS,KAAK,GAADjC,OA5BnB,8CA4B8B,KAAAA,OAAIiB,GAAWG,EAAa,CACtEL,UACAmB,aAAc,SAGhB,GAAwB,MAApBpC,EAAS4B,OAAgB,CACb,IAAIS,MAAMC,IAAIC,gBAAgBvC,EAASM,OAC/CkC,YAEN7E,QAAQC,IAAI,kCAEd,MAAOiB,GACPlB,QAAQC,IAAI,oCD4Hd6E,CAAe,CACbtB,QARkB,yBAAjBzF,EAtGiB,uBAFJ,uBAiHdkF,KAAMN,EAAKY,OACXvF,OAzHmBwD,mCA0HnBG,gBACA8B,UAAWxC,EACXyC,QAASvC,KAIb,MAAOD,GACPlB,QAAQkB,MAAM,yBAA0BA,MAqB5C,OACE7F,IAAAC,cAAA,OAAKyB,MAAO,CAAEgI,UAAW,QAASzG,SAAU,WAC1CjD,IAAAC,cAAA,OAAKiB,UAAU,gDAAgDyI,gBAAc,QAC3E3J,IAAAC,cAAA,OAAKiB,UAAU,mBACblB,IAAAC,cAAA,QAAMiB,UAAU,eAAc,2EAKlClB,IAAAC,cAAA,OAAKiB,UAAU,kEAAkEQ,MAAO,CAAEkI,UAAW,OAAQ3G,SAAU,SAAU4G,WAAY,YAC3I7J,IAAAC,cAAA,OAAKiB,UAAU,MAAMQ,MAAO,CAAEtB,MAAO,SACrCJ,IAAAC,cAAA,OAAKiB,UAAU,SACblB,IAAAC,cAAA,OAAKiB,UAAU,oEAAoEQ,MAAO,CAAEoI,MAAO,UAAWzJ,OAAQ,SAClHL,IAAAC,cAACwC,EAAS,CACNC,aAAcA,EACdC,OAAQA,EACRC,mBApBYmH,IAC1BxE,EAAUwE,EAAEC,OAAO5F,UAqBTpE,IAAAC,cAAA,OAAKiB,UAAU,8CACXlB,IAAAC,cAAA,OAAKiB,UAAU,+BACXlB,IAAAC,cAAA,SACIiB,UAAU,mBACVgD,KAAK,WACL1B,KAAK,SACLlC,GAAG,yBACH2J,QA3CEC,KACxBxE,GAAkBD,IA2CI0E,QAAS1E,IAEbzF,IAAAC,cAAA,SAAOiB,UAAU,mBAAmB4C,QAAQ,yBAAyBpC,MAAO,CAAEmB,QAAS,OAAQS,WAAY,WACvGtD,IAAAC,cAAA,KAAGyB,MAAO,CAAEE,OAAQ,eAAgB,oBACpC5B,IAAAC,cAAA,QAAMiB,UAAU,iBAAiB6C,SAAS,IAAIC,cAAY,UAAUC,MAAM,6FACtEjE,IAAAC,cAAA,OAAKC,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKY,KAAK,eAAeC,UAAU,oBAAoBf,QAAQ,aACrHH,IAAAC,cAAA,QAAMM,EAAE,wEACRP,IAAAC,cAAA,QAAMM,EAAE,4OAKxBP,IAAAC,cAAA,OAAKiB,UAAU,IACXlB,IAAAC,cAAA,UAAQiE,KAAK,SAAShD,UAAU,yBAAyBkJ,QAjInDrD,UACxB,GAAKd,EAEL,IACE,MAAM8B,EAAG,mFAAAb,OAAsFC,mBAAmBlB,IAQlH,WAPuBgB,MAAMc,EAAK,CAChCC,OAAQ,OACRC,QAAS,CACP,OAAU,uBAIAb,GACZ,MAAM,IAAIC,MAAM,gCAIlBlC,EAAY,IACZ,MAAOU,GACPlB,QAAQkB,MAAM,+BAAgCA,MA8GuD,0CAOjG7F,IAAAC,cAAA,OAAKiB,UAAU,SACblB,IAAAC,cAAA,OAAKiB,UAAU,uBAAuBQ,MAAO,CAAE2I,gBAAiB,QAAShK,OAAQ,QAAS4C,SAAU,WACpGjD,IAAAC,cAAA,OAAKiB,UAAU,+BAA+BQ,MAAO,CAAErB,OAAQ,MAAOiK,QAAS,OAAQC,SAAU,aAC5FrF,EAASsF,OAAS,EACftF,EAASuC,IAAI,CAACgD,EAAKC,IAjEfC,EAACF,EAAKC,KAC1B,MAAME,EAAsB,OAAbH,EAAI5C,KACnB,OACE7H,IAAAC,cAAA,OAAK4K,IAAKH,EAAOxJ,UAAS,UAAAgG,OAAY0D,EAAS,sBAAwB,wBAAuB,UAC5F5K,IAAAC,cAAA,OAAKiB,UAAS,eAAAgG,OAAiB0D,EAAS,wBAA0B,sBAAwBlJ,MAAO,CAAEoJ,SAAU,QACzGL,EAAI7C,QA4DiC+C,CAAcF,EAAKC,IAEhD1K,IAAAC,cAAA,OAAKiB,UAAU,OACblB,IAAAC,cAAA,UAAI,wDACJD,IAAAC,cAAA,KAAGiB,UAAU,QAAO,qOAGpBlB,IAAAC,cAAA,KAAGiB,UAAU,cAAa,0IAG1BlB,IAAAC,cAAA,KAAGiB,UAAU,cAAa,6IAOlClB,IAAAC,cAAA,OAAKiB,UAAU,gEAAgEQ,MAAO,CAAErB,OAAQ,QAC9FL,IAAAC,cAAA,OAAKiB,UAAU,oDAAoDQ,MAAO,CAAEtB,MAAO,MAAO2K,KAAM,MAAOC,UAAW,mBAAoBnB,WAAY,mDAChJ7J,IAAAC,cAACkB,EAAU,CACTE,YAAaA,EACbC,gBAAiBA,EACjB2J,UAAWtI,IAEb3C,IAAAC,cAAA,OAAKiB,UAAU,oBACblB,IAAAC,cAAA,SACEiE,KAAK,OACLhD,UAAU,eACVkD,MAAOiB,EACPhB,SAAW0F,GAAMzE,EAASyE,EAAEC,OAAO5F,OACnC8G,UAzMGnB,IACP,UAAVA,EAAEc,KAAmBxF,GACvBhE,EAAYgE,IAwMIlB,YAAY,+EAEdnE,IAAAC,cAAA,OAAKiB,UAAU,sBACblB,IAAAC,cAAA,UAAQmK,QAASA,IAAM/I,EAAYgE,GAAQnE,UAAU,kBAAkB+J,UAAW5F,IAAU1C,GAC1F3C,IAAAC,cAAA,OAAKC,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKY,KAAK,eAAeC,UAAU,oBAAoBf,QAAQ,aACvHH,IAAAC,cAAA,QAAMkL,SAAS,UAAU5K,EAAE,6JE9QtC6K,MAZHA,IAENpL,IAAAC,cAACoL,IAAM,KACLrL,IAAAC,cAACqL,IAAK,CAACC,KAAK,IAAIC,QAASxL,IAAAC,cAACwL,IAAQ,CAACC,GAAG,qBACtC1L,IAAAC,cAACqL,IAAK,CAACC,KAAK,iBAAiBC,QAASxL,IAAAC,cAAC+E,EAAU,CAACC,SAAS,oBAC3DjF,IAAAC,cAACqL,IAAK,CAACC,KAAK,mBAAmBC,QAASxL,IAAAC,cAAC+E,EAAU,CAACC,SAAS,sBAC7DjF,IAAAC,cAACqL,IAAK,CAACC,KAAK,sBAAsBC,QAASxL,IAAAC,cAAC+E,EAAU,CAACC,SAAS,yBAChEjF,IAAAC,cAACqL,IAAK,CAACC,KAAK,IAAIC,QAASxL,IAAAC,cAACwL,IAAQ,CAACC,GAAG,SCC/BC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK1K,IAAkD,IAAjD,OAAE2K,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS/K,EACpE2K,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCCDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxM,IAAAC,cAACwM,IAAM,KACLzM,IAAAC,cAACmL,EAAG,QAORO,M","file":"static/js/main.9f4f77a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/astrid_seeger.91fe1939.png\";","module.exports = __webpack_public_path__ + \"static/media/michael_schulze.d19e7ad0.png\";","module.exports = __webpack_public_path__ + \"static/media/lieselotte_daenger.a7459b0b.png\";","import React from 'react';\r\n\r\nconst SoundIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"80\" height=\"80\">\r\n  <path id=\"line1\" d=\"M20 10 L20 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\" begin=\"0s\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M20 10 L20 90; M20 30 L20 70; M20 10 L20 90;\" repeatCount=\"indefinite\" begin=\"0.1s\"/>\r\n  </path>\r\n  <path id=\"line2\" d=\"M35 20 L35 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M35 20 L35 80; M35 40 L35 60; M35 20 L35 80;\" repeatCount=\"indefinite\" begin=\"0.2s\"/>\r\n  </path>\r\n  <path id=\"line3\" d=\"M50 10 L50 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M50 10 L50 90; M50 30 L50 70; M50 10 L50 90;\" repeatCount=\"indefinite\" begin=\"0.3s\"/>\r\n  </path>\r\n  <path id=\"line4\" d=\"M65 20 L65 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M65 20 L65 80; M65 40 L65 60; M65 20 L65 80;\" repeatCount=\"indefinite\" begin=\"0.4s\"/>\r\n  </path>\r\n  <path id=\"line5\" d=\"M80 10 L80 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M80 10 L80 90; M80 30 L80 70; M80 10 L80 90;\" repeatCount=\"indefinite\" begin=\"0.5s\"/>\r\n  </path>\r\n</svg>\r\n);\r\n\r\nexport default SoundIcon;\r\n","import React from 'react';\r\n\r\nconst MicIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n        <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n    </svg>\r\n);\r\n  \r\n\r\nexport default MicIcon;\r\n","import React from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport SoundIcon from '../static/SoundIcon';\r\nimport MicIcon from '../static/MicIcon';\r\n\r\nconst Dictaphone = ({ sendMessage, dictaphoneState }) => {\r\n  const {\r\n    transcript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Dieser Browser unterstützt keine Spracherkennung. Diese App ist primär für Google Chrome und andere Chromium-basierte Browser entwickelt.</span>;\r\n  }\r\n\r\n  function timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n  const renderIcon = () => {\r\n    switch (dictaphoneState) {\r\n      case 1:\r\n        return (\r\n          <MicIcon/>\r\n        );\r\n      case 2:\r\n        return <div className=\"spinner-border text-light\" role=\"status\">\r\n      </div>;\r\n      case 3:\r\n        return (\r\n          <SoundIcon/>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const handleMouseUp = () => {\r\n    timeout(7000);\r\n    SpeechRecognition.stopListening();\r\n    sendMessage(transcript);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input-container d-flex justify-content-center align-items-center\">\r\n    <div className=\"d-flex align-items-center\">\r\n        <button \r\n            className=\"round-button btn btn-primary dictaphone-button\" \r\n            style={{ borderRadius: '50%', width: '100px', height: '100px', margin: '10px' }} \r\n            onMouseDown={SpeechRecognition.startListening} \r\n            onMouseUp={handleMouseUp} \r\n        >\r\n            {renderIcon()}\r\n        </button>\r\n        <p className=\"text-primary\" style={{ margin: '0 0 0 10px' }}>Zur Spracheingabe Button drücken und halten</p>\r\n    </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;","import React from 'react';\r\nimport  img_astrid  from '../static/astrid_seeger.png';\r\nimport  img_michael  from '../static/michael_schulze.png';\r\nimport  img_lieselotte  from '../static/lieselotte_daenger.png';\r\n\r\nconst Sidepanel = ({ vignetteName, apiKey, handleApiKeyChange }) => {\r\n    const renderImage = (vignetteName) => {\r\n        switch (vignetteName) {\r\n            case \"Michael Schulze\":\r\n                return <img src={img_michael} className=\"img-fluid rounded\" alt=\"Michael Schulze\" />;\r\n            case \"Astrid Seeger\":\r\n                return <img src={img_astrid} className=\"img-fluid rounded\" alt=\"Astrid Seeger\" />;\r\n            case \"Lieselotte Dänger\":\r\n                return <img src={img_lieselotte} className=\"img-fluid rounded\" alt=\"Lieselotte Dänger\" />;\r\n            default:\r\n                return <div></div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', height: '100%', paddingTop: '10px', boxSizing: 'border-box', overflow: 'hidden' }}>\r\n        <h1 style={{ margin: \"10px 0\", fontSize: '1.8rem', overflow: 'hidden', textOverflow: 'ellipsis' }}>{vignetteName}</h1> {/* Adjusted font size */}\r\n        <div style={{ flex: '1', display: 'flex', justifyContent: 'center', alignItems: 'center', overflow: 'hidden' }}>\r\n            {renderImage(vignetteName, { maxWidth: '100%', maxHeight: '100%' })}\r\n        </div>\r\n        <div className=\"row mt-3\" style={{ flexShrink: 0 }}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"apiKeyInput\" className=\"form-label\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <h4 style={{ margin: \"0 10px 0 0\", fontSize: '1.2rem' }}>API Key</h4> {/* Adjusted font size */}\r\n                    <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\" title=\"Der API-Key kann der LimeSurvey Umfrage entnommen werden.\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"/>\r\n                            <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\"/>\r\n                        </svg>\r\n                    </span>\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"apiKeyInput\"\r\n                    placeholder=\"Hier Key einfügen\"\r\n                    value={apiKey}\r\n                    onChange={handleApiKeyChange}\r\n                    style={{ width: '100%' }}  // Ensure the input field fits the container width\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n};\r\nexport default Sidepanel;","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dictaphone from './helperFunctions/Dictaphone';\r\n// import { createAudioStreamFromText } from './helperFunctions/audioStreamFromText';\r\nimport {startStreaming} from './helperFunctions/AudioStream';\r\nimport Sidepanel from './helperFunctions/Sidepanel';\r\n\r\nconst vignetteMap = {\r\n  'astrid-seeger': 'Astrid Seeger',\r\n  'michael-schulze': 'Michael Schulze',\r\n  'lieselotte-daenger': 'Lieselotte Dänger',\r\n};\r\nfunction generateUUID() {\r\n  return crypto.randomUUID();\r\n};\r\nfunction checkAndSetSessionID() {\r\n  const sessionIDKey = 'sessionID';\r\n  \r\n  // Check if sessionID is already in localStorage\r\n  let sessionID = localStorage.getItem(sessionIDKey);\r\n  console.log(sessionID);\r\n  \r\n  if (!sessionID) {\r\n      // If sessionID doesn't exist, generate a new one\r\n      sessionID = generateUUID();\r\n      \r\n      // Store the new sessionID in localStorage\r\n      localStorage.setItem(sessionIDKey, sessionID);\r\n  }\r\n\r\n  // Return the sessionID (whether newly generated or existing)\r\n  return sessionID;\r\n};\r\n\r\n\r\nconst ChatWindow = ({ vignette }) => {\r\n\r\n  const vignetteName = vignetteMap[vignette] || 'Unknown Vignette'; // Default to 'Unknown Vignette' if not found\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  // const [vignette, setVignette] = useState('Astrid Seeger');\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [dictaphoneState, setDictaphoneState] = useState(1);\r\n  const [voiceGenState, setVoiceGenState] = useState(true)\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const dotenv = require(\"dotenv\");\r\n  const sessionId = checkAndSetSessionID(); // Make sure this function is correctly implemented to return a session ID\r\n  \r\n  dotenv.config();\r\n  const ELEVENLABS_API_KEY = process.env.REACT_APP_ELEVENLABS_API_KEY;\r\n  console.log(ELEVENLABS_API_KEY);\r\n\r\n  if (!ELEVENLABS_API_KEY) {\r\n    throw new Error(\"Missing ELEVENLABS_API_KEY in environment variables\");\r\n  }\r\n  const chatContainerRef = useRef(null); // Ref für den Chat-Container\r\n  const voiceIdAstrid = 'cgSgspJ2msm6clMCkdW9';\r\n  const voiceIdMichael = 't0jbNlBVZ17f02VDIeMI';\r\n  const voiceIdLieselotte = 'pFZP5JQG7iQjIQuC4Bku';\r\n  const voiceSettings = {\r\n  stability: 0.5,\r\n  similarity_boost: 0.75,\r\n  style: 1,\r\n  use_speaker_boost: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sessionId = checkAndSetSessionID();\r\n    console.log('Session ID:', sessionId);\r\n    fetchMessages(sessionId)\r\n}, [sessionId]);\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]); // Scrollen bei Änderung der Nachrichten\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && input) {\r\n      sendMessage(input);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (sessionId) => {\r\n    if (!sessionId || !vignetteName) return;\r\n\r\n    try {\r\n      const response = await fetch(`https://llm-patient-simulation-backend.vercel.app/conversation/load_messages?session_id=${encodeURIComponent(sessionId)}&case_report_id=${encodeURIComponent(vignetteName)}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to load messages');\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const apiMessages = data.response.map(([sender, text]) => ({\r\n        user: sender === 'Arzt' ? 'Me' : sender,\r\n        text: text\r\n    }));\r\n    \r\n    // Update the messages state by adding all the API messages\r\n    setMessages([...messages, ...apiMessages]);\r\n\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n      setError('Failed to load messages');\r\n    } finally {\r\n      setLoading(false); // Set loading to false once done\r\n    }\r\n  };\r\n  const clearConversation = async () => {\r\n    if (!sessionId) return;\r\n\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/conversation/clear?session_id=${encodeURIComponent(sessionId)}`\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to clear conversation');\r\n      }\r\n      \r\n      // Clear messages from state\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error('Error clearing conversation:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message) => {\r\n    if (!message || !apiKey) return;\r\n    setDictaphoneState(2);\r\n    setInput('');\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/retrieve_answer?message=${encodeURIComponent(message)}&api_key=${apiKey}&session_id=${encodeURIComponent(sessionId)}&case_report_id=${encodeURIComponent(vignetteName)}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to retrieve answer');\r\n      }\r\n      const data = await response.json();\r\n      setMessages([...messages, { user: 'Me', text: message }, { user: 'Bot', text: data.answer }]);\r\n      setInput('');\r\n      setDictaphoneState(1); // Reset dictaphone state after successful message\r\n      if (voiceGenState) {\r\n        var voiceId = '';\r\n        if(vignetteName === 'Michael Schulze'){\r\n          voiceId = voiceIdMichael;\r\n        }\r\n        if(vignetteName === 'Astrid Seeger'){\r\n          voiceId = voiceIdAstrid;\r\n        }\r\n        if(vignetteName === 'Lieselotte Dänger'){\r\n          voiceId = voiceIdLieselotte;\r\n        }\r\n        else{\r\n          voiceId = voiceIdAstrid;\r\n        }\r\n\r\n        startStreaming({\r\n          voiceId, \r\n          text: data.answer,\r\n          apiKey: ELEVENLABS_API_KEY,\r\n          voiceSettings,\r\n          onLoading: setLoading, // you need to define setLoading state\r\n          onError: setError // you need to define setError state\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n  const handleInputChange = () => {\r\n    setVoiceGenState(!voiceGenState);\r\n  };\r\n  const renderMessage = (msg, index) => {\r\n    const isUser = msg.user === 'Me';\r\n    return (\r\n      <div key={index} className={`d-flex ${isUser ? 'justify-content-end' : 'justify-content-start'} my-2`}>\r\n        <div className={`p-2 rounded ${isUser ? 'bg-primary text-white' : 'bg-light text-dark'}`} style={{ maxWidth: '70%' }}>\r\n           {msg.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxHeight: '100vh', overflow: 'hidden'}}>\r\n      <nav className=\"navbar bg-dark border-bottom border-body h-10\" data-bs-theme=\"dark\">\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-text\">\r\n            Einsatz KI-basierter Patientensimulationen in der medizinischen Lehre\r\n          </span>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container-fluid d-flex justify-content-center align-items-start\" style={{ minHeight: '90vh', overflow: 'hidden', background: '#696969' }}>\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n        <div className=\"col-3\">\r\n          <div className=\"h-90 d-flex flex-column justify-content-between align-items-start\" style={{ color: '#faf8ff', height: '90vh'}}>\r\n              <Sidepanel \r\n                  vignetteName={vignetteName}\r\n                  apiKey={apiKey}\r\n                  handleApiKeyChange={handleApiKeyChange}\r\n              />\r\n              <div className=\"w-100 d-flex flex-column align-items-start\">\r\n                  <div className=\"form-check form-switch mb-3\">\r\n                      <input \r\n                          className=\"form-check-input\" \r\n                          type=\"checkbox\" \r\n                          role=\"switch\" \r\n                          id=\"flexSwitchCheckDefault\" \r\n                          onInput={handleInputChange} \r\n                          checked={voiceGenState}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                          <p style={{ margin: \"0 10px 0 0\" }}>Audio generieren</p>\r\n                          <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\" title=\"Neben der schriftlichen Ausgabe der Patientenäußerungen gibt es eine Sprachausgabe.\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                                  <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"/>\r\n                                  <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\"/>\r\n                              </svg>\r\n                          </span>\r\n                      </label>\r\n                  </div>\r\n                  <div className=\"\">\r\n                      <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={clearConversation}>Gesprächsverläufe löschen</button>\r\n                  </div>\r\n              </div>\r\n              \r\n          </div>\r\n      </div>\r\n\r\n          <div className=\"col-9\">\r\n            <div className=\"rounded-xl shadow-lg\" style={{ backgroundColor: 'white', height: '100vh', overflow: 'hidden' }}>\r\n            <div className=\"chat-container overflow-auto\" style={{ height: '60%', padding: '10px', position: 'relative' }}>\r\n                {messages.length > 0 ? (\r\n                    messages.map((msg, index) => renderMessage(msg, index))\r\n                ) : (\r\n                    <div className=\"m-4\">\r\n                      <h3>Willkommen zur KI-gestützten Patientensimulation.</h3>\r\n                      <p className=\"lead\">\r\n                      Sie haben die Gelegenheit, ein Anamnesegespräch mit einem virtuellen Patienten zu führen. Diese Simulation dient dazu, Ihre Fähigkeiten in der Gesprächsführung und Diagnosestellung zu üben und zu optimieren.\r\n                      </p>\r\n                      <p className=\"text-muted\">\r\n                      Bevor Sie starten, tragen Sie bitte den sogenannten \"API-Key\" in das unten links angezeigte Feld ein, um die Simulation zu aktivieren.\r\n                      </p>\r\n                      <p className=\"text-muted\">\r\n                      Sobald dies erledigt ist, können Sie das Gespräch beginnen, indem Sie den Patienten begrüßen oder Ihre erste Frage stellen.\r\n                      </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n              <div className=\"container-fluid d-flex justify-content-center align-items-end\" style={{ height: '20%' }}>\r\n                <div className=\"position-fixed bottom-0 mb-3 p-2 rounded-l shadow\" style={{ width: '60%', left: '60%', transform: 'translateX(-50%)', background: 'linear-gradient(white, rgba(255, 255, 255, 0))' }}>\r\n                  <Dictaphone \r\n                    sendMessage={sendMessage} \r\n                    dictaphoneState={dictaphoneState} \r\n                    disabled={!apiKey} \r\n                  />\r\n                  <div className=\"input-group mt-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={input}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                      onKeyDown={handleKeyDown}\r\n                      placeholder=\"Anamnesegespräch mit Patienten durch Text- oder Spracheingabe beginnen.\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button onClick={() => sendMessage(input)} className=\"btn btn-primary\" disabled={!input || !apiKey}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\r\n                          <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8\"/>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;","import axios from \"axios\";\r\n\r\nexport const startStreaming = async ({ voiceId, text, apiKey, voiceSettings, onLoading, onError }) => {\r\n    \r\n        const baseUrl = \"https://api.elevenlabs.io/v1/text-to-speech\";\r\n        const headers = {\r\n          \"Content-Type\": \"application/json\",\r\n          \"xi-api-key\": apiKey,\r\n        };\r\n\r\n        console.log(headers);\r\n    \r\n        const requestBody = {\r\n          text,\r\n          voice_settings: voiceSettings,\r\n          model_id: \"eleven_multilingual_v1\"\r\n        }; \r\n    \r\n        try {\r\n          // Call the api/v1/voices endpoint to get the list of voices\r\n    const voicesResponse = await axios.get(\"https://api.elevenlabs.io/v1/voices\", { headers });\r\n    if (voicesResponse.status === 200) {\r\n      const germanVoices = voicesResponse.data.voices.filter(voice => \r\n        voice.fine_tuning && voice.fine_tuning.language === \"de\"\r\n      );\r\n      console.log(\"German Voices:\", germanVoices);\r\n    } else {\r\n      console.log(\"Error: Unable to fetch voices.\");\r\n    }\r\n\r\n\r\n\r\n          const response = await axios.post(`${baseUrl}/${voiceId}`, requestBody, {\r\n            headers,\r\n            responseType: \"blob\",\r\n          });\r\n    \r\n          if (response.status === 200) {\r\n            const audio = new Audio(URL.createObjectURL(response.data));\r\n            audio.play();\r\n          } else {\r\n            console.log(\"Error: Unable to stream audio.\");\r\n          }\r\n        } catch (error) {\r\n          console.log(\"Error: Unable to stream audio.\");\r\n        } \r\n      };\r\n\r\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport ChatWindow from './pages/ChatWindow';\n\nconst App = () => {\n  return (\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/astrid-seeger\" />} />\n        <Route path=\"/astrid-seeger\" element={<ChatWindow vignette=\"astrid-seeger\" />} />\n        <Route path=\"/michael-schulze\" element={<ChatWindow vignette=\"michael-schulze\" />} />\n        <Route path=\"/lieselotte-daenger\" element={<ChatWindow vignette=\"lieselotte-daenger\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}