{"version":3,"sources":["pages/static/SoundIcon.js","pages/static/MicIcon.js","pages/helperFunctions/Dictaphone.js","pages/ChatWindow.js","App.js","reportWebVitals.js","index.js"],"names":["SoundIcon","React","createElement","xmlns","viewBox","width","height","id","d","stroke","stroke-width","stroke-linecap","begin","attributeName","dur","values","repeatCount","MicIcon","fill","className","Dictaphone","_ref","sendMessage","dictaphoneState","transcript","browserSupportsSpeechRecognition","useSpeechRecognition","style","borderRadius","margin","onMouseDown","SpeechRecognition","startListening","onMouseUp","handleMouseUp","delay","Promise","res","setTimeout","stopListening","renderIcon","class","role","ChatWindow","messages","setMessages","useState","input","setInput","vignette","setVignette","apiKey","setApiKey","setDictaphoneState","chatContainerRef","useRef","useEffect","current","scrollTop","scrollHeight","handleButtonClick","async","url","concat","encodeURIComponent","name","response","fetch","method","ok","status","console","error","errorMessage","text","message","headers","Error","data","json","user","answer","minHeight","overflow","background","color","type","onClick","htmlFor","placeholder","value","onChange","e","target","backgroundColor","padding","position","map","msg","index","renderMessage","isUser","key","maxWidth","left","transform","disabled","onKeyDown","fillRule","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router","basename"],"mappings":"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","file":"static/js/main.fb150a23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SoundIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"80\" height=\"80\">\r\n  <path id=\"line1\" d=\"M20 10 L20 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\" begin=\"0s\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M20 10 L20 90; M20 30 L20 70; M20 10 L20 90;\" repeatCount=\"indefinite\" begin=\"0.1s\"/>\r\n  </path>\r\n  <path id=\"line2\" d=\"M35 20 L35 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M35 20 L35 80; M35 40 L35 60; M35 20 L35 80;\" repeatCount=\"indefinite\" begin=\"0.2s\"/>\r\n  </path>\r\n  <path id=\"line3\" d=\"M50 10 L50 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M50 10 L50 90; M50 30 L50 70; M50 10 L50 90;\" repeatCount=\"indefinite\" begin=\"0.3s\"/>\r\n  </path>\r\n  <path id=\"line4\" d=\"M65 20 L65 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M65 20 L65 80; M65 40 L65 60; M65 20 L65 80;\" repeatCount=\"indefinite\" begin=\"0.4s\"/>\r\n  </path>\r\n  <path id=\"line5\" d=\"M80 10 L80 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M80 10 L80 90; M80 30 L80 70; M80 10 L80 90;\" repeatCount=\"indefinite\" begin=\"0.5s\"/>\r\n  </path>\r\n</svg>\r\n);\r\n\r\nexport default SoundIcon;\r\n","import React from 'react';\r\n\r\nconst MicIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n        <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n    </svg>\r\n);\r\n  \r\n\r\nexport default MicIcon;\r\n","import React from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport SoundIcon from '../static/SoundIcon';\r\nimport MicIcon from '../static/MicIcon';\r\n\r\nconst Dictaphone = ({ sendMessage, dictaphoneState }) => {\r\n  const {\r\n    transcript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition. This app is primarily developed for Google Chrome.</span>;\r\n  }\r\n\r\n  function timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n  const renderIcon = () => {\r\n    switch (dictaphoneState) {\r\n      case 1:\r\n        return (\r\n          <MicIcon/>\r\n        );\r\n      case 2:\r\n        return <div class=\"spinner-border text-light\" role=\"status\">\r\n      </div>;\r\n      case 3:\r\n        return (\r\n          <SoundIcon/>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const handleMouseUp = () => {\r\n    timeout(5000);\r\n    SpeechRecognition.stopListening();\r\n    sendMessage(transcript);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input-container  d-flex flex-column align-items-center\">\r\n      <button \r\n        className=\"round-button btn btn-primary dictaphone-button\" \r\n        style={{ borderRadius: '50%', width: '100px', height: '100px' , margin: '20px'}} \r\n        onMouseDown={SpeechRecognition.startListening} \r\n        onMouseUp={handleMouseUp} \r\n      >\r\n        {renderIcon()}\r\n      </button>\r\n      <p class=\"text-primary\">Zur Spracheingabe Button drücken und halten</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dictaphone from './helperFunctions/Dictaphone';\r\n// import { createAudioStreamFromText } from './helperFunctions/audioStreamFromText';\r\n\r\nconst ChatWindow = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [vignette, setVignette] = useState('Astrid Seeger');\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [dictaphoneState, setDictaphoneState] = useState(1);\r\n  // const [voiceGenState, setVoiceGenState] = useState(true)\r\n\r\n  const chatContainerRef = useRef(null); // Ref für den Chat-Container\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]); // Scrollen bei Änderung der Nachrichten\r\n\r\n  const handleButtonClick = async (name) => {\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/conversation/vignette?name=${encodeURIComponent(name)}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST'\r\n      });\r\n\r\n      if (response.ok) {\r\n        setVignette(name);\r\n        setMessages([]);\r\n      } else {\r\n        // Handle errors\r\n        if (response.status === 0) {\r\n          console.error('Failed to update vignette: CORS issue detected.');\r\n        } else if (!response.ok && !response.status) {\r\n          console.error('Failed to update vignette: Network error.');\r\n        } else {\r\n          const errorMessage = await response.text();\r\n          console.error(`Failed to update vignette: ${response.status} - ${errorMessage}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && input) {\r\n      sendMessage(input);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message) => {\r\n    if (!message || !apiKey) return;\r\n    setDictaphoneState(2);\r\n    setInput('');\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/retrieve_answer?message=${encodeURIComponent(message)}&api_key=${apiKey}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      }); \r\n      if (!response.ok) {\r\n        throw new Error('Failed to retrieve answer');\r\n      }\r\n      const data = await response.json();\r\n      setMessages([...messages, { user: 'Me', text: message }, { user: 'Bot', text: data.answer }]);\r\n      setInput('');\r\n      setDictaphoneState(1); // Reset dictaphone state after successful message\r\n      // if (voiceGenState){\r\n      //   createAudioStreamFromText(data.answer);\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const renderMessage = (msg, index) => {\r\n    const isUser = msg.user === 'Me';\r\n    return (\r\n      <div key={index} className={`d-flex ${isUser ? 'justify-content-end' : 'justify-content-start'} my-2`}>\r\n        <div className={`p-2 rounded ${isUser ? 'bg-primary text-white' : 'bg-light text-dark'}`} style={{ maxWidth: '70%' }}>\r\n           {msg.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh', overflow: 'hidden', background: '#696969' }}>\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n          <div className=\"col-3\">\r\n            <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\" style={{ color: '#faf8ff', height: '100vh' }}>\r\n              <div>\r\n                <h4 style={{ margin: \"20px\" }}>Auswahl der Fallvignette</h4>\r\n                <div className=\"row\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`btn btn-lg ${vignette === 'Astrid Seeger' ? 'btn-primary' : 'btn-secondary'}`}\r\n                    onClick={() => handleButtonClick('Astrid Seeger')}\r\n                  >\r\n                    Astrid Seeger\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`btn btn-lg ${vignette === 'Michael Schulze' ? 'btn-primary' : 'btn-secondary'}`}\r\n                    onClick={() => handleButtonClick('Michael Schulze')}\r\n                  >\r\n                    Michael Schulze\r\n                  </button>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"apiKeyInput\" className=\"form-label\">\r\n                      <h4 style={{ margin: \"20px\" }}>API Key</h4>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"apiKeyInput\"\r\n                      placeholder=\"Hier Key einfügen\"\r\n                      value={apiKey}\r\n                      onChange={handleApiKeyChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-check form-switch\">\r\n                  { <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"  /* onInput={ setVoiceGenState} */ /> }\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Audio generieren</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <div className=\"rounded-xl shadow-lg\" style={{ backgroundColor: 'white', height: '100vh', overflow: 'hidden' }}>\r\n              <div className=\"chat-container overflow-auto\" style={{ height: '60%', padding: '10px', position: 'relative' }}>\r\n                {messages.map((msg, index) => renderMessage(msg, index))}\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center align-items-end\" style={{ height: '20%' }}>\r\n                <div className=\"position-fixed bottom-0 mb-3 p-2 rounded-l shadow\" style={{ width: '60%', left: '60%', transform: 'translateX(-50%)', background: 'linear-gradient(white, rgba(255, 255, 255, 0))' }}>\r\n                  <Dictaphone sendMessage={sendMessage} dictaphoneState={dictaphoneState} disabled={!apiKey} />\r\n                  <div className=\"input-group mt-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={input}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                      onKeyDown={handleKeyDown}\r\n                      placeholder=\"Hier Nachricht eintragen..\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button onClick={() => sendMessage(input)} className=\"btn btn-primary\" disabled={!input || !apiKey}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\r\n                          <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8\"/>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","// src/App.js\nimport React from 'react';\nimport ChatWindow from './pages/ChatWindow';\nimport './App.css';\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ChatWindow />} />\n    </Routes>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router basename=\"/llm-patient-simulation-frontend\">\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}