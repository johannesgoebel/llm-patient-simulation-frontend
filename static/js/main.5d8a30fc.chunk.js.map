{"version":3,"sources":["pages/ChatWindow.js","App.js","reportWebVitals.js","index.js"],"names":["ChatWindow","messages","setMessages","useState","input","setInput","error","setError","systemPromptData","setSystemPromptData","currentPromptData","setCurrentPromptData","vignette","setVignette","apiKey","setApiKey","fetchCurrentPromptData","async","response","fetch","method","headers","ok","Error","result","json","message","console","handleButtonClick","url","concat","encodeURIComponent","name","useEffect","fetchSystemPromptData","React","createElement","className","style","height","overflow","width","margin","class","type","onClick","for","id","placeholder","value","onChange","e","target","overflowY","border","padding","map","msg","index","renderMessage","isUser","user","key","maxWidth","text","basicAuthChatWithPatient","localStorage","getItem","base64Credentials","split","credentials","atob","username","password","log","data","answer","disabled","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router","basename"],"mappings":"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","file":"static/js/main.5d8a30fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ChatWindow = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [systemPromptData, setSystemPromptData] = useState(null);\r\n  const [currentPromptData, setCurrentPromptData] = useState(null);\r\n  const [vignette, setVignette] = useState('Astrid Seeger');\r\n  const [apiKey, setApiKey] = useState('');\r\n\r\n  const fetchCurrentPromptData = async () => {\r\n    try {\r\n      const response = await fetch('https://llm-patient-simulation-backend.vercel.app/conversation/current_prompt', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const result = await response.json();\r\n      setCurrentPromptData(result.message);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (name) => {\r\n    try {\r\n        const url = `https://llm-patient-simulation-backend.vercel.app/conversation/vignette?name=${encodeURIComponent(name)}`;\r\n\r\n        const response = await fetch(url, {\r\n            method: 'POST'\r\n        });\r\n\r\n        if (response.ok) {\r\n            setVignette(name);\r\n            setMessages([]);\r\n\r\n        } else {\r\n            console.error('Failed to update vignette');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSystemPromptData = async () => {\r\n    try {\r\n      const response = await fetch('https://llm-patient-simulation-backend.vercel.app/conversation/load_case_vignette', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      setSystemPromptData(result.message);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input || !apiKey) return; // Check if input or apiKey is empty\r\n  \r\n    try {\r\n      const basicAuthChatWithPatient = localStorage.getItem('basicAuthChatWithPatient');\r\n      if (!basicAuthChatWithPatient) {\r\n        throw new Error('Authentication token not found');\r\n      }\r\n      const base64Credentials = basicAuthChatWithPatient.split(' ')[1];\r\n      const credentials = atob(base64Credentials);\r\n      const [username, password] = credentials.split(':');\r\n\r\n      console.log('Username:', username); // Output: \"username\"\r\n      console.log('Password:', password); // Output: \"Password\r\n\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/retrieve_answer?message=${encodeURIComponent(input)}&api_key=${apiKey}`;\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to retrieve answer');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      setMessages([...messages, { user: 'Me', text: input }, { user: 'Bot', text: data.answer }]);\r\n      setInput('');\r\n      fetchCurrentPromptData();\r\n      setError(null);\r\n      \r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSystemPromptData();\r\n    fetchCurrentPromptData();\r\n  }, []);\r\n\r\n  const renderMessage = (msg, index) => {\r\n    const isUser = msg.user === 'Me';\r\n    return (\r\n      <div key={index} className={`d-flex ${isUser ? 'justify-content-end' : 'justify-content-start'} my-2`}>\r\n        <div className={`p-2 rounded ${isUser ? 'bg-primary text-white' : 'bg-light text-dark'}`} style={{ maxWidth: '70%' }}>\r\n           {msg.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Function to handle API key input change\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex justify-content-center align-items-center\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n      <div className=\"row\" style={{ width: \"80%\" }}>\r\n        <div className=\"col\">\r\n          <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\">\r\n            <div>\r\n              <h4 style={{ margin: \"20px\" }}>Auswahl der Fallvignette</h4>\r\n              <div class =\"row\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-lg ${vignette === 'Astrid Seeger' ? 'btn-primary' : 'btn-secondary'}`}\r\n                  onClick={() => handleButtonClick('Astrid Seeger')}\r\n                >\r\n                  Astrid Seeger\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-lg ${vignette === 'Michael Schulze' ? 'btn-primary' : 'btn-secondary'}`}\r\n                  onClick={() => handleButtonClick('Michael Schulze')}\r\n                >\r\n                  Michael Schulze\r\n                </button>\r\n\r\n                <div class = \"row\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"apiKeyInput\" class=\"form-label\"><h4 style={{ margin: \"20px\" }}>API Key</h4></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"apiKeyInput\" placeholder=\"Hier Key einfügen\" value={apiKey} onChange={handleApiKeyChange}></input>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n      \r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"overflow-hidden\">\r\n            <div className=\"card\" style={{ overflowY: 'scroll', height: '100%', width : '100%'}}>\r\n              <div className=\"card-header\">\r\n                <h2>Chat </h2>\r\n              </div>\r\n              <div className=\"card-body d-flex flex-column\" style={{ height: '400px' }}>\r\n                <div className=\"mb-3 flex-grow-1\" style={{ overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\r\n                  {messages.map((msg, index) => renderMessage(msg, index))}\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Hier Nachricht eintragen..\"\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button onClick={sendMessage} className=\"btn btn-primary\" disabled={!input || !apiKey}>Senden</button>\r\n                  </div>\r\n                </div>\r\n\r\n                {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};  \r\nexport default ChatWindow;","// src/App.js\nimport React from 'react';\nimport ChatWindow from './pages/ChatWindow';\nimport './App.css';\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ChatWindow />} />\n    </Routes>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router basename=\"/llm-patient-simulation-frontend\">\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}