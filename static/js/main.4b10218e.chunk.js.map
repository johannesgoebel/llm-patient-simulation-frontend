{"version":3,"sources":["pages/static/SoundIcon.js","pages/static/MicIcon.js","pages/helperFunctions/Dictaphone.js","pages/helperFunctions/AudioStream.js","pages/ChatWindow.js","App.js","reportWebVitals.js","index.js"],"names":["SoundIcon","React","createElement","xmlns","viewBox","width","height","id","d","stroke","stroke-width","stroke-linecap","begin","attributeName","dur","values","repeatCount","MicIcon","fill","className","Dictaphone","_ref","sendMessage","dictaphoneState","transcript","browserSupportsSpeechRecognition","useSpeechRecognition","style","borderRadius","margin","onMouseDown","SpeechRecognition","startListening","onMouseUp","handleMouseUp","delay","Promise","res","setTimeout","stopListening","renderIcon","role","vignetteMap","ChatWindow","vignette","console","log","vignetteName","messages","setMessages","useState","input","setInput","apiKey","setApiKey","setDictaphoneState","voiceGenState","setVoiceGenState","loading","setLoading","error","setError","require","config","process","chatContainerRef","useRef","voiceSettings","stability","similarity_boost","use_speaker_boost","useEffect","current","scrollTop","scrollHeight","loadVignette","async","url","concat","encodeURIComponent","name","response","fetch","method","ok","status","errorMessage","text","message","headers","Error","data","json","user","answer","voiceId","onLoading","onError","requestBody","voice_settings","model_id","voicesResponse","axios","get","germanVoices","voices","filter","voice","fine_tuning","language","post","responseType","Audio","URL","createObjectURL","play","startStreaming","minHeight","overflow","background","color","htmlFor","type","placeholder","value","onChange","e","target","onInput","handleInputChange","checked","backgroundColor","padding","position","map","msg","index","renderMessage","isUser","key","maxWidth","left","transform","disabled","onKeyDown","onClick","fillRule","App","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router","basename"],"mappings":"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","file":"static/js/main.4b10218e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SoundIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"80\" height=\"80\">\r\n  <path id=\"line1\" d=\"M20 10 L20 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\" begin=\"0s\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M20 10 L20 90; M20 30 L20 70; M20 10 L20 90;\" repeatCount=\"indefinite\" begin=\"0.1s\"/>\r\n  </path>\r\n  <path id=\"line2\" d=\"M35 20 L35 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M35 20 L35 80; M35 40 L35 60; M35 20 L35 80;\" repeatCount=\"indefinite\" begin=\"0.2s\"/>\r\n  </path>\r\n  <path id=\"line3\" d=\"M50 10 L50 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M50 10 L50 90; M50 30 L50 70; M50 10 L50 90;\" repeatCount=\"indefinite\" begin=\"0.3s\"/>\r\n  </path>\r\n  <path id=\"line4\" d=\"M65 20 L65 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M65 20 L65 80; M65 40 L65 60; M65 20 L65 80;\" repeatCount=\"indefinite\" begin=\"0.4s\"/>\r\n  </path>\r\n  <path id=\"line5\" d=\"M80 10 L80 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M80 10 L80 90; M80 30 L80 70; M80 10 L80 90;\" repeatCount=\"indefinite\" begin=\"0.5s\"/>\r\n  </path>\r\n</svg>\r\n);\r\n\r\nexport default SoundIcon;\r\n","import React from 'react';\r\n\r\nconst MicIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n        <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n    </svg>\r\n);\r\n  \r\n\r\nexport default MicIcon;\r\n","import React from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport SoundIcon from '../static/SoundIcon';\r\nimport MicIcon from '../static/MicIcon';\r\n\r\nconst Dictaphone = ({ sendMessage, dictaphoneState }) => {\r\n  const {\r\n    transcript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition. This app is primarily developed for Google Chrome.</span>;\r\n  }\r\n\r\n  function timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n  const renderIcon = () => {\r\n    switch (dictaphoneState) {\r\n      case 1:\r\n        return (\r\n          <MicIcon/>\r\n        );\r\n      case 2:\r\n        return <div className=\"spinner-border text-light\" role=\"status\">\r\n      </div>;\r\n      case 3:\r\n        return (\r\n          <SoundIcon/>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const handleMouseUp = () => {\r\n    timeout(5000);\r\n    SpeechRecognition.stopListening();\r\n    sendMessage(transcript);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input-container  d-flex flex-column align-items-center\">\r\n      <button \r\n        className=\"round-button btn btn-primary dictaphone-button\" \r\n        style={{ borderRadius: '50%', width: '100px', height: '100px' , margin: '20px'}} \r\n        onMouseDown={SpeechRecognition.startListening} \r\n        onMouseUp={handleMouseUp} \r\n      >\r\n        {renderIcon()}\r\n      </button>\r\n      <p className=\"text-primary\">Zur Spracheingabe Button drücken und halten</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;\r\n","import axios from \"axios\";\r\n\r\nexport const startStreaming = async ({ voiceId, text, apiKey, voiceSettings, onLoading, onError }) => {\r\n    \r\n        const baseUrl = \"https://api.elevenlabs.io/v1/text-to-speech\";\r\n        const headers = {\r\n          \"Content-Type\": \"application/json\",\r\n          \"xi-api-key\": apiKey,\r\n        };\r\n\r\n        console.log(headers);\r\n    \r\n        const requestBody = {\r\n          text,\r\n          voice_settings: voiceSettings,\r\n          model_id: \"eleven_multilingual_v1\"\r\n        }; \r\n    \r\n        try {\r\n          // Call the api/v1/voices endpoint to get the list of voices\r\n    const voicesResponse = await axios.get(\"https://api.elevenlabs.io/v1/voices\", { headers });\r\n    if (voicesResponse.status === 200) {\r\n      const germanVoices = voicesResponse.data.voices.filter(voice => \r\n        voice.fine_tuning && voice.fine_tuning.language === \"de\"\r\n      );\r\n      console.log(\"German Voices:\", germanVoices);\r\n    } else {\r\n      console.log(\"Error: Unable to fetch voices.\");\r\n    }\r\n\r\n\r\n\r\n          const response = await axios.post(`${baseUrl}/${voiceId}`, requestBody, {\r\n            headers,\r\n            responseType: \"blob\",\r\n          });\r\n    \r\n          if (response.status === 200) {\r\n            const audio = new Audio(URL.createObjectURL(response.data));\r\n            audio.play();\r\n          } else {\r\n            console.log(\"Error: Unable to stream audio.\");\r\n          }\r\n        } catch (error) {\r\n          console.log(\"Error: Unable to stream audio.\");\r\n        } \r\n      };\r\n\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dictaphone from './helperFunctions/Dictaphone';\r\n// import { createAudioStreamFromText } from './helperFunctions/audioStreamFromText';\r\nimport {startStreaming} from './helperFunctions/AudioStream';\r\n\r\nconst vignetteMap = {\r\n  'astrid-seeger': 'Astrid Seeger',\r\n  'michael-schulze': 'Michael Schulze',\r\n  'lieselotte-daenger': 'Lieselotte Daenger',\r\n};\r\n\r\nconst ChatWindow = ({ vignette }) => {\r\n\r\n  console.log('Vignette parameter:', vignette); // Debugging line to check the value\r\n\r\n  const vignetteName = vignetteMap[vignette] || 'Unknown Vignette'; // Default to 'Unknown Vignette' if not found\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  // const [vignette, setVignette] = useState('Astrid Seeger');\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [dictaphoneState, setDictaphoneState] = useState(1);\r\n  const [voiceGenState, setVoiceGenState] = useState(true)\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const dotenv = require(\"dotenv\");\r\n\r\n  dotenv.config();\r\n  const ELEVENLABS_API_KEY = process.env.REACT_APP_ELEVENLABS_API_KEY;\r\n  console.log(ELEVENLABS_API_KEY);\r\n\r\n  if (!ELEVENLABS_API_KEY) {\r\n    throw new Error(\"Missing ELEVENLABS_API_KEY in environment variables\");\r\n  }\r\n  const chatContainerRef = useRef(null); // Ref für den Chat-Container\r\n  const voiceIdAstrid = 'pFZP5JQG7iQjIQuC4Bku';\r\n  const voiceIdMichael = 't0jbNlBVZ17f02VDIeMI';\r\n  const voiceSettings = {\r\n  stability: 0.5,\r\n  similarity_boost: 0.75,\r\n  style: 1,\r\n  use_speaker_boost: true,\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]); // Scrollen bei Änderung der Nachrichten\r\n\r\n  useEffect(() => {\r\n    if (vignetteName) {\r\n      loadVignette(vignetteName);\r\n    }\r\n  }, [vignetteName]);\r\n\r\n  const loadVignette = async (name) => {\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/conversation/vignette?name=${encodeURIComponent(name)}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST'\r\n      });\r\n\r\n      if (response.ok) {\r\n        //setVignette(name);\r\n        setMessages([]);\r\n      } else {\r\n        // Handle errors\r\n        if (response.status === 0) {\r\n          console.error('Failed to update vignette: CORS issue detected.');\r\n        } else if (!response.ok && !response.status) {\r\n          console.error('Failed to update vignette: Network error.');\r\n        } else {\r\n          const errorMessage = await response.text();\r\n          console.error(`Failed to update vignette: ${response.status} - ${errorMessage}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && input) {\r\n      sendMessage(input);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message) => {\r\n    if (!message || !apiKey) return;\r\n    setDictaphoneState(2);\r\n    setInput('');\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/retrieve_answer?message=${encodeURIComponent(message)}&api_key=${apiKey}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      }); \r\n      if (!response.ok) {\r\n        throw new Error('Failed to retrieve answer');\r\n      }\r\n      const data = await response.json();\r\n      setMessages([...messages, { user: 'Me', text: message }, { user: 'Bot', text: data.answer }]);\r\n      setInput('');\r\n      setDictaphoneState(1); // Reset dictaphone state after successful message\r\n      if (voiceGenState) {\r\n        var voiceId = '';\r\n        if(vignetteName == 'Michael Schulze'){\r\n          voiceId = voiceIdMichael;\r\n        }else{\r\n          voiceId = voiceIdAstrid;\r\n        }\r\n\r\n        startStreaming({\r\n          voiceId, \r\n          text: data.answer,\r\n          apiKey: ELEVENLABS_API_KEY,\r\n          voiceSettings,\r\n          onLoading: setLoading, // you need to define setLoading state\r\n          onError: setError // you need to define setError state\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n  const handleInputChange = () => {\r\n    setVoiceGenState(!voiceGenState);\r\n  };\r\n  const renderMessage = (msg, index) => {\r\n    const isUser = msg.user === 'Me';\r\n    return (\r\n      <div key={index} className={`d-flex ${isUser ? 'justify-content-end' : 'justify-content-start'} my-2`}>\r\n        <div className={`p-2 rounded ${isUser ? 'bg-primary text-white' : 'bg-light text-dark'}`} style={{ maxWidth: '70%' }}>\r\n           {msg.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh', overflow: 'hidden', background: '#696969' }}>\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n          <div className=\"col-3\">\r\n            <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\" style={{ color: '#faf8ff', height: '100vh' }}>\r\n               <div>\r\n                <h4 style={{ margin: \"20px\" }}>{vignetteName}</h4>\r\n                \r\n                {/* <div className=\"row\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`btn btn-lg ${vignette === 'Astrid Seeger' ? 'btn-primary' : 'btn-secondary'}`}\r\n                    onClick={() => handleButtonClick('Astrid Seeger')}\r\n                  >\r\n                    Astrid Seeger\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`btn btn-lg ${vignette === 'Michael Schulze' ? 'btn-primary' : 'btn-secondary'}`}\r\n                    onClick={() => handleButtonClick('Michael Schulze')}\r\n                  >\r\n                    Michael Schulze\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`btn btn-lg ${vignette === 'Lieselotte Daenger' ? 'btn-primary' : 'btn-secondary'}`}\r\n                    onClick={() => handleButtonClick('Lieselotte Daenger')}\r\n                  >\r\n                    Lieselotte Dänger\r\n                  </button>\r\n                </div> */}\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"apiKeyInput\" className=\"form-label\">\r\n                      <h4 style={{ margin: \"20px\" }}>API Key</h4>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"apiKeyInput\"\r\n                      placeholder=\"Hier Key einfügen\"\r\n                      value={apiKey}\r\n                      onChange={handleApiKeyChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-check form-switch\">\r\n                  <input \r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    role=\"switch\" \r\n                    id=\"flexSwitchCheckDefault\" \r\n                    onInput={handleInputChange} \r\n                    checked={voiceGenState}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                    Audio generieren\r\n                  </label>\r\n                </div>\r\n              </div> \r\n            </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <div className=\"rounded-xl shadow-lg\" style={{ backgroundColor: 'white', height: '100vh', overflow: 'hidden' }}>\r\n              <div className=\"chat-container overflow-auto\" style={{ height: '60%', padding: '10px', position: 'relative' }}>\r\n                {messages.map((msg, index) => renderMessage(msg, index))}\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center align-items-end\" style={{ height: '20%' }}>\r\n                <div className=\"position-fixed bottom-0 mb-3 p-2 rounded-l shadow\" style={{ width: '60%', left: '60%', transform: 'translateX(-50%)', background: 'linear-gradient(white, rgba(255, 255, 255, 0))' }}>\r\n                  <Dictaphone sendMessage={sendMessage} dictaphoneState={dictaphoneState} disabled={!apiKey} />\r\n                  <div className=\"input-group mt-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={input}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                      onKeyDown={handleKeyDown}\r\n                      placeholder=\"Hier Nachricht eintragen..\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button onClick={() => sendMessage(input)} className=\"btn btn-primary\" disabled={!input || !apiKey}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\r\n                          <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8\"/>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport ChatWindow from './pages/ChatWindow';\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Navigate to=\"/astrid-seeger\" />} />\n      <Route path=\"/astrid-seeger\" element={<ChatWindow vignette=\"astrid-seeger\" />} />\n      <Route path=\"/michael-schulze\" element={<ChatWindow vignette=\"michael-schulze\" />} />\n      <Route path=\"/lieselotte-daenger\" element={<ChatWindow vignette=\"lieselotte-daenger\" />} />\n      {/* Catch-all route for any undefined routes */}\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router basename=\"/llm-patient-simulation-frontend\">\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}