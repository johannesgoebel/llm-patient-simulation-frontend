{"version":3,"sources":["pages/static/astrid_seeger.png","pages/static/michael_schulze.png","pages/static/lieselotte_daenger.png","pages/static/SoundIcon.js","pages/static/MicIcon.js","pages/helperFunctions/Dictaphone.js","pages/helperFunctions/Sidepanel.js","pages/ChatWindow.js","pages/helperFunctions/AudioStream.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SoundIcon","React","createElement","xmlns","viewBox","width","height","id","d","stroke","stroke-width","stroke-linecap","begin","attributeName","dur","values","repeatCount","MicIcon","fill","className","Dictaphone","_ref","sendMessage","dictaphoneState","transcript","browserSupportsSpeechRecognition","useSpeechRecognition","style","borderRadius","margin","onMouseDown","SpeechRecognition","startListening","onMouseUp","handleMouseUp","delay","Promise","res","setTimeout","stopListening","renderIcon","role","Sidepanel","vignetteName","apiKey","handleApiKeyChange","src","img_michael","alt","img_astrid","img_lieselotte","renderImage","htmlFor","display","alignItems","tabIndex","data-toggle","title","type","placeholder","value","onChange","vignetteMap","checkAndSetSessionID","sessionID","localStorage","getItem","console","log","crypto","randomUUID","setItem","ChatWindow","vignette","messages","setMessages","useState","input","setInput","setApiKey","setDictaphoneState","voiceGenState","setVoiceGenState","loading","setLoading","error","setError","require","config","process","chatContainerRef","useRef","voiceSettings","stability","similarity_boost","use_speaker_boost","useEffect","current","scrollTop","scrollHeight","loadVignette","async","url","concat","encodeURIComponent","name","response","fetch","method","ok","status","errorMessage","text","message","headers","Error","data","json","user","answer","voiceId","onLoading","onError","requestBody","voice_settings","model_id","voicesResponse","axios","get","germanVoices","voices","filter","voice","fine_tuning","language","post","responseType","Audio","URL","createObjectURL","play","startStreaming","maxHeight","overflow","class","data-bs-theme","minHeight","background","color","e","target","onInput","handleInputChange","checked","backgroundColor","padding","position","length","map","msg","index","renderMessage","isUser","key","maxWidth","left","transform","disabled","onKeyDown","onClick","fillRule","App","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.25c5a3f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/astrid_seeger.91fe1939.png\";","module.exports = __webpack_public_path__ + \"static/media/michael_schulze.d19e7ad0.png\";","module.exports = __webpack_public_path__ + \"static/media/lieselotte_daenger.a7459b0b.png\";","import React from 'react';\r\n\r\nconst SoundIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"80\" height=\"80\">\r\n  <path id=\"line1\" d=\"M20 10 L20 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\" begin=\"0s\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M20 10 L20 90; M20 30 L20 70; M20 10 L20 90;\" repeatCount=\"indefinite\" begin=\"0.1s\"/>\r\n  </path>\r\n  <path id=\"line2\" d=\"M35 20 L35 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M35 20 L35 80; M35 40 L35 60; M35 20 L35 80;\" repeatCount=\"indefinite\" begin=\"0.2s\"/>\r\n  </path>\r\n  <path id=\"line3\" d=\"M50 10 L50 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M50 10 L50 90; M50 30 L50 70; M50 10 L50 90;\" repeatCount=\"indefinite\" begin=\"0.3s\"/>\r\n  </path>\r\n  <path id=\"line4\" d=\"M65 20 L65 80\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M65 20 L65 80; M65 40 L65 60; M65 20 L65 80;\" repeatCount=\"indefinite\" begin=\"0.4s\"/>\r\n  </path>\r\n  <path id=\"line5\" d=\"M80 10 L80 90\" stroke=\"white\" stroke-width=\"8\" stroke-linecap=\"round\">\r\n    <animate attributeName=\"d\" dur=\"1s\" values=\"M80 10 L80 90; M80 30 L80 70; M80 10 L80 90;\" repeatCount=\"indefinite\" begin=\"0.5s\"/>\r\n  </path>\r\n</svg>\r\n);\r\n\r\nexport default SoundIcon;\r\n","import React from 'react';\r\n\r\nconst MicIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n        <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n    </svg>\r\n);\r\n  \r\n\r\nexport default MicIcon;\r\n","import React from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport SoundIcon from '../static/SoundIcon';\r\nimport MicIcon from '../static/MicIcon';\r\n\r\nconst Dictaphone = ({ sendMessage, dictaphoneState }) => {\r\n  const {\r\n    transcript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Dieser Browser unterstützt keine Spracherkennung. Diese App ist primär für Google Chrome und andere Chromium-basierte Browser entwickelt.</span>;\r\n  }\r\n\r\n  function timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n  const renderIcon = () => {\r\n    switch (dictaphoneState) {\r\n      case 1:\r\n        return (\r\n          <MicIcon/>\r\n        );\r\n      case 2:\r\n        return <div className=\"spinner-border text-light\" role=\"status\">\r\n      </div>;\r\n      case 3:\r\n        return (\r\n          <SoundIcon/>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const handleMouseUp = () => {\r\n    timeout(7000);\r\n    SpeechRecognition.stopListening();\r\n    sendMessage(transcript);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input-container d-flex justify-content-center align-items-center\">\r\n    <div className=\"d-flex align-items-center\">\r\n        <button \r\n            className=\"round-button btn btn-primary dictaphone-button\" \r\n            style={{ borderRadius: '50%', width: '100px', height: '100px', margin: '10px' }} \r\n            onMouseDown={SpeechRecognition.startListening} \r\n            onMouseUp={handleMouseUp} \r\n        >\r\n            {renderIcon()}\r\n        </button>\r\n        <p className=\"text-primary\" style={{ margin: '0 0 0 10px' }}>Zur Spracheingabe Button drücken und halten</p>\r\n    </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;","import React from 'react';\r\nimport  img_astrid  from '../static/astrid_seeger.png';\r\nimport  img_michael  from '../static/michael_schulze.png';\r\nimport  img_lieselotte  from '../static/lieselotte_daenger.png';\r\n\r\nconst Sidepanel = ({ vignetteName, apiKey, handleApiKeyChange }) => {\r\n    const renderImage = (vignetteName) => {\r\n        switch (vignetteName) {\r\n            case \"Michael Schulze\":\r\n                return <img src={img_michael} className=\"img-fluid rounded\" alt=\"Michael Schulze\" />;\r\n            case \"Astrid Seeger\":\r\n                return <img src={img_astrid} className=\"img-fluid rounded\" alt=\"Astrid Seeger\" />;\r\n            case \"Lieselotte Dänger\":\r\n                return <img src={img_lieselotte} className=\"img-fluid rounded\" alt=\"Lieselotte Dänger\" />;\r\n            default:\r\n                return <div></div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ margin: \"20px\" }}>{vignetteName}</h1>\r\n            {renderImage(vignetteName)}\r\n            <div className=\"row mt-3\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"apiKeyInput\" className=\"form-label\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <h4 style={{ margin: \"0 10px 0 0\" }}>API Key</h4>\r\n                        <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\" title=\"Der API-Key kann der LimeSurvey Umfrage entnommen werden.\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"/>\r\n                                <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\"/>\r\n                            </svg>\r\n                        </span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"apiKeyInput\"\r\n                        placeholder=\"Hier Key einfügen\"\r\n                        value={apiKey}\r\n                        onChange={handleApiKeyChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidepanel;","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dictaphone from './helperFunctions/Dictaphone';\r\n// import { createAudioStreamFromText } from './helperFunctions/audioStreamFromText';\r\nimport {startStreaming} from './helperFunctions/AudioStream';\r\nimport Sidepanel from './helperFunctions/Sidepanel';\r\n\r\nconst vignetteMap = {\r\n  'astrid-seeger': 'Astrid Seeger',\r\n  'michael-schulze': 'Michael Schulze',\r\n  'lieselotte-daenger': 'Lieselotte Dänger',\r\n};\r\nfunction generateUUID() {\r\n  return crypto.randomUUID();\r\n};\r\nfunction checkAndSetSessionID() {\r\n  const sessionIDKey = 'sessionID';\r\n  \r\n  // Check if sessionID is already in localStorage\r\n  let sessionID = localStorage.getItem(sessionIDKey);\r\n  console.log(sessionID);\r\n  \r\n  if (!sessionID) {\r\n      // If sessionID doesn't exist, generate a new one\r\n      sessionID = generateUUID();\r\n      \r\n      // Store the new sessionID in localStorage\r\n      localStorage.setItem(sessionIDKey, sessionID);\r\n  }\r\n\r\n  // Return the sessionID (whether newly generated or existing)\r\n  return sessionID;\r\n};\r\n\r\n\r\nconst ChatWindow = ({ vignette }) => {\r\n\r\n  const vignetteName = vignetteMap[vignette] || 'Unknown Vignette'; // Default to 'Unknown Vignette' if not found\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  // const [vignette, setVignette] = useState('Astrid Seeger');\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [dictaphoneState, setDictaphoneState] = useState(1);\r\n  const [voiceGenState, setVoiceGenState] = useState(true)\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const dotenv = require(\"dotenv\");\r\n\r\n  dotenv.config();\r\n  const ELEVENLABS_API_KEY = process.env.REACT_APP_ELEVENLABS_API_KEY;\r\n  console.log(ELEVENLABS_API_KEY);\r\n\r\n  if (!ELEVENLABS_API_KEY) {\r\n    throw new Error(\"Missing ELEVENLABS_API_KEY in environment variables\");\r\n  }\r\n  const chatContainerRef = useRef(null); // Ref für den Chat-Container\r\n  const voiceIdAstrid = 'cgSgspJ2msm6clMCkdW9';\r\n  const voiceIdMichael = 't0jbNlBVZ17f02VDIeMI';\r\n  const voiceIdLieselotte = 'pFZP5JQG7iQjIQuC4Bku';\r\n  const voiceSettings = {\r\n  stability: 0.5,\r\n  similarity_boost: 0.75,\r\n  style: 1,\r\n  use_speaker_boost: true,\r\n  };\r\n\r\n    useEffect(() => {\r\n    const sessionID = checkAndSetSessionID();\r\n    console.log('Session ID:', sessionID);\r\n}, []);\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]); // Scrollen bei Änderung der Nachrichten\r\n\r\n  useEffect(() => {\r\n    if (vignetteName) {\r\n      loadVignette(vignetteName);\r\n    }\r\n  }, [vignetteName]);\r\n\r\n\r\n  const loadVignette = async (name) => {\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/conversation/vignette?name=${encodeURIComponent(name)}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST'\r\n      });\r\n\r\n      if (response.ok) {\r\n        //setVignette(name);\r\n        setMessages([]);\r\n      } else {\r\n        // Handle errors\r\n        if (response.status === 0) {\r\n          console.error('Failed to update vignette: CORS issue detected.');\r\n        } else if (!response.ok && !response.status) {\r\n          console.error('Failed to update vignette: Network error.');\r\n        } else {\r\n          const errorMessage = await response.text();\r\n          console.error(`Failed to update vignette: ${response.status} - ${errorMessage}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && input) {\r\n      sendMessage(input);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message) => {\r\n    if (!message || !apiKey) return;\r\n    setDictaphoneState(2);\r\n    setInput('');\r\n    try {\r\n      const url = `https://llm-patient-simulation-backend.vercel.app/retrieve_answer?message=${encodeURIComponent(message)}&api_key=${apiKey}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      }); \r\n      if (!response.ok) {\r\n        throw new Error('Failed to retrieve answer');\r\n      }\r\n      const data = await response.json();\r\n      setMessages([...messages, { user: 'Me', text: message }, { user: 'Bot', text: data.answer }]);\r\n      setInput('');\r\n      setDictaphoneState(1); // Reset dictaphone state after successful message\r\n      if (voiceGenState) {\r\n        var voiceId = '';\r\n        if(vignetteName == 'Michael Schulze'){\r\n          voiceId = voiceIdMichael;\r\n        }\r\n        if(vignetteName == 'Astrid Seeger'){\r\n          voiceId = voiceIdAstrid;\r\n        }\r\n        if(vignetteName == 'Lieselotte Dänger'){\r\n          voiceId = voiceIdLieselotte;\r\n        }\r\n        else{\r\n          voiceId = voiceIdAstrid;\r\n        }\r\n\r\n        startStreaming({\r\n          voiceId, \r\n          text: data.answer,\r\n          apiKey: ELEVENLABS_API_KEY,\r\n          voiceSettings,\r\n          onLoading: setLoading, // you need to define setLoading state\r\n          onError: setError // you need to define setError state\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n  const handleInputChange = () => {\r\n    setVoiceGenState(!voiceGenState);\r\n  };\r\n  const renderMessage = (msg, index) => {\r\n    const isUser = msg.user === 'Me';\r\n    return (\r\n      <div key={index} className={`d-flex ${isUser ? 'justify-content-end' : 'justify-content-start'} my-2`}>\r\n        <div className={`p-2 rounded ${isUser ? 'bg-primary text-white' : 'bg-light text-dark'}`} style={{ maxWidth: '70%' }}>\r\n           {msg.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxHeight: '100vh', overflow: 'hidden'}}>\r\n      <nav class=\"navbar bg-dark border-bottom border-body h-10\" data-bs-theme=\"dark\">\r\n        <div class=\"container-fluid\">\r\n          <span class=\"navbar-text\">\r\n            Einsatz KI-basierter Patientensimulationen in der medizinischen Lehre\r\n          </span>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container-fluid d-flex justify-content-center align-items-center\" style={{ minHeight: '90vh', overflow: 'hidden', background: '#696969' }}>\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n          <div className=\"col-3\">\r\n            <div className=\"h-90 d-flex flex-column justify-content-center align-items-center\" style={{ color: '#faf8ff', height: '90vh' }}>\r\n               <div>\r\n                <Sidepanel \r\n                  vignetteName={vignetteName}\r\n                  apiKey={apiKey}\r\n                  handleApiKeyChange={handleApiKeyChange}\r\n                /> \r\n                <div className=\"form-check form-switch\">\r\n                  <input \r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    role=\"switch\" \r\n                    id=\"flexSwitchCheckDefault\" \r\n                    onInput={handleInputChange} \r\n                    checked={voiceGenState}\r\n                  />\r\n                  {/* <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                    Audio generieren \r\n                  </label> */}\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <p style={{ margin: \"0 10px 0 0\" }}>Audio generieren </p>\r\n                        <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\" title=\"Der API-Key kann der LimeSurvey Umfrage entnommen werden.\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"/>\r\n                                <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\"/>\r\n                            </svg>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n              </div> \r\n            </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <div className=\"rounded-xl shadow-lg\" style={{ backgroundColor: 'white', height: '100vh', overflow: 'hidden' }}>\r\n            <div className=\"chat-container overflow-auto\" style={{ height: '60%', padding: '10px', position: 'relative' }}>\r\n                {messages.length > 0 ? (\r\n                    messages.map((msg, index) => renderMessage(msg, index))\r\n                ) : (\r\n                    <div class=\"m-4\">\r\n                      <h3>Dies ist die KI-basierte Patientensimulation</h3>\r\n                      <p class=\"lead\">\r\n                          Sie sind eingeladen, ein Anamnesegespräch mit einem simulierten Patienten zu führen. Diese Simulation soll Ihnen die Möglichkeit geben, Ihre Fähigkeiten in der Gesprächsführung und Diagnosestellung zu testen und zu verbessern.\r\n                      </p>\r\n                      <p class=\"text-muted\">\r\n                          Starten Sie das Gespräch, indem Sie den Patienten begrüßen oder eine Frage stellen.\r\n                      </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n              <div className=\"container-fluid d-flex justify-content-center align-items-end\" style={{ height: '20%' }}>\r\n                <div className=\"position-fixed bottom-0 mb-3 p-2 rounded-l shadow\" style={{ width: '60%', left: '60%', transform: 'translateX(-50%)', background: 'linear-gradient(white, rgba(255, 255, 255, 0))' }}>\r\n                  <Dictaphone \r\n                    sendMessage={sendMessage} \r\n                    dictaphoneState={dictaphoneState} \r\n                    disabled={!apiKey} \r\n                  />\r\n                  <div className=\"input-group mt-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={input}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                      onKeyDown={handleKeyDown}\r\n                      placeholder=\"Anamnesegespräch mit Patienten durch Text- oder Spracheingabe beginnen.\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button onClick={() => sendMessage(input)} className=\"btn btn-primary\" disabled={!input || !apiKey}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\r\n                          <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8\"/>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;","import axios from \"axios\";\r\n\r\nexport const startStreaming = async ({ voiceId, text, apiKey, voiceSettings, onLoading, onError }) => {\r\n    \r\n        const baseUrl = \"https://api.elevenlabs.io/v1/text-to-speech\";\r\n        const headers = {\r\n          \"Content-Type\": \"application/json\",\r\n          \"xi-api-key\": apiKey,\r\n        };\r\n\r\n        console.log(headers);\r\n    \r\n        const requestBody = {\r\n          text,\r\n          voice_settings: voiceSettings,\r\n          model_id: \"eleven_multilingual_v1\"\r\n        }; \r\n    \r\n        try {\r\n          // Call the api/v1/voices endpoint to get the list of voices\r\n    const voicesResponse = await axios.get(\"https://api.elevenlabs.io/v1/voices\", { headers });\r\n    if (voicesResponse.status === 200) {\r\n      const germanVoices = voicesResponse.data.voices.filter(voice => \r\n        voice.fine_tuning && voice.fine_tuning.language === \"de\"\r\n      );\r\n      console.log(\"German Voices:\", germanVoices);\r\n    } else {\r\n      console.log(\"Error: Unable to fetch voices.\");\r\n    }\r\n\r\n\r\n\r\n          const response = await axios.post(`${baseUrl}/${voiceId}`, requestBody, {\r\n            headers,\r\n            responseType: \"blob\",\r\n          });\r\n    \r\n          if (response.status === 200) {\r\n            const audio = new Audio(URL.createObjectURL(response.data));\r\n            audio.play();\r\n          } else {\r\n            console.log(\"Error: Unable to stream audio.\");\r\n          }\r\n        } catch (error) {\r\n          console.log(\"Error: Unable to stream audio.\");\r\n        } \r\n      };\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport ChatWindow from './pages/ChatWindow';\n\nconst App = () => {\n  return (\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/astrid-seeger\" />} />\n        <Route path=\"/astrid-seeger\" element={<ChatWindow vignette=\"astrid-seeger\" />} />\n        <Route path=\"/michael-schulze\" element={<ChatWindow vignette=\"michael-schulze\" />} />\n        <Route path=\"/lieselotte-daenger\" element={<ChatWindow vignette=\"lieselotte-daenger\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}